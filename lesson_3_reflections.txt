# Lesson 2 - Problem Set 1 (no reflections file)#
# Lesson 3 - Creating and Modifying a Repository #

Q1.
What happens when you initialize a repository? Why do you need to do it?

A1.
It creates a .git file in directory (hidden file > type@$: ls -a to see)
You need to do it to flag directory as a git repository and add relevant functionality.

Q2.
Reflect: Staging Area
Now that youâ€™ve added a file to the staging area (or maybe multiple files!), go add the following question and your thoughts on it to your lesson_2_reflections file:

How is the staging area different from the working directory and the repository? What value do you think it offers?

A2.
You can add files from the working directory (add <filename>) to the staging area before committing them to the repository.  This allows you to choose at which commit you do so for each file (when modified).  You should try to do this in a logical (change) manner.

# Note:
How to write a commit message
You're about to make your first commit to your reflections repository. When you do this, you'll need to write a commit message describing your changes. If you followed the instructions in the "Setting Up Your Workspace" video for your platform near the end of Lesson 1, the editor you chose will appear as soon as you run git commit and allow you to write a commit message. If you get an error message, you should try revisiting the instructions in Lesson 1 and make sure your text editor is set up properly.

You can also specify a commit message via the command line by running: 
> git commit -m "Commit message" 
instead of just git commit. It's still a good idea to get an editor set up, since this will make it easier to write long commit messages that fully describe the change.
# end of Note


